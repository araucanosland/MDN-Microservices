#pragma checksum "C:\Users\17042783-1.LAARAUCANA\Source\Mdn-Dev\MDN-Microservices\legacy\src\Api\CRM\Areas\AppPage\Views\Licencias\Ingreso.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4c9488d0015c3d5bff32f2aec359f02cefa4e5d3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_AppPage_Views_Licencias_Ingreso), @"mvc.1.0.view", @"/Areas/AppPage/Views/Licencias/Ingreso.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/AppPage/Views/Licencias/Ingreso.cshtml", typeof(AspNetCore.Areas_AppPage_Views_Licencias_Ingreso))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4c9488d0015c3d5bff32f2aec359f02cefa4e5d3", @"/Areas/AppPage/Views/Licencias/Ingreso.cshtml")]
    public class Areas_AppPage_Views_Licencias_Ingreso : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/magic-check/css/magic-check.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootbox/bootbox.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/fooTable/dist/footable.all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-validator/bootstrapValidator.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-select/bootstrap-select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/masked-input/jquery.maskedinput.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/js/jquery.rut.chileno.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\17042783-1.LAARAUCANA\Source\Mdn-Dev\MDN-Microservices\legacy\src\Api\CRM\Areas\AppPage\Views\Licencias\Ingreso.cshtml"
  
    ViewBag.Title = "Ingreso";
    Layout = "~/Views/Shared/_MdnLayout.cshtml";

#line default
#line hidden
            BeginContext(91, 42, true);
            WriteLiteral("\r\n\r\n\r\n<!--Magic Checkbox [ OPTIONAL ]-->\r\n");
            EndContext();
            BeginContext(133, 83, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d36387", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(216, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(218, 63, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d37640", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(281, 14580, true);
            WriteLiteral(@"



<!--Page content-->
<!--===================================================-->
<div id=""page-content"">


    <div class=""row"">
        <div class=""col-lg-12"">

            <div class=""panel"">
                <div class=""panel-heading"">
                    <h3 class=""panel-title"">Recepci√≥n de Licencias No Visadas</h3>
                </div>

                <!--Block Styled Form -->
                <!--===================================================-->
                <form id=""frm-data-lc"">
                    <div class=""panel-body"">


                        <div class=""row"">
                            <div class=""col-sm-3"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Rut Afiliado</label>
                                    <input type=""text"" class=""form-control es-rut"" name=""AfiliadoRut"" id=""AfiliadoRut"" tabindex=""1"" required>
                                </div>
                           ");
            WriteLiteral(@" </div>
                            <div class=""col-sm-6"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Nombre Afiliado</label>
                                    <input type=""text"" class=""form-control"" readonly=""readonly"" id=""AfiNombres"">
                                </div>
                            </div>
                            <div class=""col-sm-3"">
                                <div class=""checkbox pad-top"">
                                    <label>
                                        <input type=""checkbox"" name=""SistemaNoData"" id=""SistemaNoData"" tabindex=""2""> Sin datos en sistema
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-sm-3"">
                                <div class=""form-group"">
                ");
            WriteLiteral(@"                    <label class=""control-label"">Rut Empresa</label>
                                    <input type=""text"" class=""form-control es-rut"" readonly=""readonly"" id=""EmpresaRut"">
                                </div>
                            </div>
                            <div class=""col-sm-6"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Nombre Empresa</label>
                                    <input type=""text"" class=""form-control"" readonly=""readonly"" id=""EmpresaNombre"">
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-sm-5"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Formato Licencia</label>
                                    <div class=""radio"">
                              ");
            WriteLiteral(@"          <!-- Inline radio buttons -->
                                        <input id=""radio-formato-manual-lm"" class=""magic-radio"" type=""radio"" name=""radio-formato-licencia"" checked=""checked"">
                                        <label for=""radio-formato-manual-lm"">Manual</label>
                                        <!-- <input id=""radio-formato-electronico-lm"" class=""magic-radio"" type=""radio"" name=""radio-formato-licencia"">
                                         <label for=""radio-formato-electronico-lm"">Electr√≥nica</label> -->
                                        <input id=""radio-formato-mixto-lm"" class=""magic-radio"" type=""radio"" name=""radio-formato-licencia"">
                                        <label for=""radio-formato-mixto-lm"">Mixta</label>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-sm-4"">
                                <div class=""form-group"">
           ");
            WriteLiteral(@"                         <div class=""checkbox pad-top"">
                                        <label>
                                            <input type=""checkbox"" name=""DerivarLM"" id=""DerivarLM"" tabindex=""2""> Derivar Licencia
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class=""row"">
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Numero Licencia</label>
                                    <input type=""text"" class=""form-control"" name=""FolioLic"" id=""FolioLic"" tabindex=""3"">
                                </div>
                            </div>
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                               ");
            WriteLiteral(@"     <label class=""control-label"">Dias Licencia</label>
                                    <input type=""text"" class=""form-control validatore"" id=""DiasLM"" name=""DiasLM"" tabindex=""6"" readonly=""readonly"">
                                </div>
                            </div>


                            <div class=""col-sm-4"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Derivar LM a:</label>
                                    <select class=""form-control"" id=""sslOfiDerivacion"" name=""OfiDerivacion "" disabled=""disabled""></select>
                                </div>
                            </div>
                            <div class=""col-sm-4"">
                                <div class=""form-group"">
                                    <label class=""form-control alert-danger"" id=""lblmensajecompin"" style=""display:none;"">Sucursal no cuenta con COMPIN directa para tramitaci√≥n, LM ser√° enviada a sucursal: <b><u><spa");
            WriteLiteral(@"n id=""lblCompin"" style=""display:none;""></span></u></b></label>
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Fecha Desde</label>
                                    <input type=""text"" id=""FechaDesdeLM"" name=""FechaDesdeLM"" class=""form-control demo-msk-date validatore"" placeholder=""dd/mm/yyyy"" tabindex=""5"" readonly=""readonly"">
                                </div>
                            </div>

                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Fecha Hasta</label>
                                    <input type=""text"" id=""FechaHastaLM"" class=""form-control demo-msk-date"" placeholder=""dd/mm/yyyy"" reado");
            WriteLiteral(@"nly=""readonly"">
                                </div>
                            </div>
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <input type=""text"" class=""form-control validatore"" id=""FormLM"" name=""FormLM"" tabindex=""7"" readonly=""readonly"" value=""Manual"" style=""display:none;"">
                                </div>
                            </div>
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                   
                                </div>
                            </div>
                            <div class=""col-sm-4"">
                                <div class=""form-group"">
                                    <label class=""form-control alert-danger"" id=""lblmensajecompin1"" style=""display:none;"">NOTA INTERNA debe ser dirigida a:<b><u><span id=""lblCompin1"" style=""display:none;""></span></u></b></label");
            WriteLiteral(@">
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-sm-3"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Color</label>

                                    <div class=""radio"">

                                        <!-- Inline radio buttons -->
                                        <input id=""demo-inline-form-radio"" class=""magic-radio"" type=""radio"" name=""inline-form-radio"" disabled=""disabled"">
                                        <label for=""demo-inline-form-radio"">Roja</label>

                                        <input id=""demo-inline-form-radio-2"" class=""magic-radio"" type=""radio"" name=""inline-form-radio"" disabled=""disabled"">
                                        <label for=""demo-inline-form-radio-2"">Verde</label>
                                    </div>

   ");
            WriteLiteral(@"                             </div>
                            </div>

                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Tipo Licencia</label>
                                    <input type=""text"" class=""form-control validatore"" id=""TipoLM"" name=""TipoLM"" tabindex=""6"" readonly=""readonly"">
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Fecha Afiliaci√≥n</label>
                                    <input type=""text"" id=""wq1"" class=""form-control demo-msk-date"" placeholder=""dd/mm/yyyy"" readonly=""readonly"">
                                </div>
                            </div>

                         ");
            WriteLiteral(@"   <div class=""col-sm-2"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Fecha Contrato</label>
                                    <input type=""text"" id=""wq2"" class=""form-control demo-msk-date"" placeholder=""dd/mm/yyyy"" readonly=""readonly"">
                                </div>
                            </div>
                        </div>


                        <hr />

                        <div class=""row"" id=""checkList"">

                            <div class=""form-group pad-ver"">
                                <div class=""col-md-4"" id=""doc_check"" style=""display:none;"">
                                    <h4 class=""title"">Documentos Recepcionados</h4>
                                    <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""m1"" class=""magic-checkbox"" type=""checkbox"">
                                        <labe");
            WriteLiteral(@"l for=""m1"" id=""lm1"">[mes1]</label>
                                    </div>


                                    <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""m2"" class=""magic-checkbox"" type=""checkbox"">
                                        <label for=""m2"" id=""lm2"">[mes2]</label>
                                    </div>


                                    <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""m3"" class=""magic-checkbox"" type=""checkbox"">
                                        <label for=""m3"" id=""lm3"">[mes3]</label>
                                    </div>

                                </div>

                                <div class=""col-md-4"" id=""doc_check_nac"" style=""display:none;"">
                                    <h4 class=""title"">Documentos Recepcionados Maternal</h4>
                         ");
            WriteLiteral(@"           <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""mn1"" class=""magic-checkbox"" type=""checkbox"">
                                        <label for=""mn1"" id=""lmn1"">[mes1]</label>
                                    </div>


                                    <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""mn2"" class=""magic-checkbox"" type=""checkbox"">
                                        <label for=""mn2"" id=""lmn2"">[mes2]</label>
                                    </div>


                                    <!-- Checkboxes -->
                                    <div class=""checkbox"">
                                        <input id=""mn3"" class=""magic-checkbox"" type=""checkbox"">
                                        <label for=""mn3"" id=""lmn3"">[mes3]</label>
                                    </div>

                ");
            WriteLiteral(@"                    <!-- Checkboxes -->
                                    <div class=""checkbox"" id=""nac"">
                                        <input id=""mncn"" data-tipodoc=""3"" class=""magic-checkbox"" type=""checkbox"" value=""201799"">
                                        <label for=""mncn"">Certificado de Nacimiento</label>
                                    </div>

                                </div>

                            </div>

                        </div>


                    </div>
                    <div class=""panel-footer text-right"">
                        <button class=""btn btn-primary"" type=""button"" id=""bt-bolver"">Volver</button>
                        <button class=""btn btn-success"" type=""submit"" id=""bt-guarda-otra"">Guardar</button>
                        <!--<button class=""btn btn-success"" type=""submit"" id=""bt-guarda-bolver"" tabindex=""4"">Guardar y Volver</button>-->
                    </div>
                </form>
                <!--====================");
            WriteLiteral("===============================-->\r\n                <!--End Block Styled Form -->\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n<!--===================================================-->\r\n<!--End page content-->\r\n\r\n\r\n");
            EndContext();
            DefineSection("script", async() => {
                BeginContext(14877, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(14885, 74, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d324570", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14959, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(14965, 86, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d325828", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15051, 48, true);
                WriteLiteral("\r\n    <!--Bootstrap Select [ OPTIONAL ]-->\r\n    ");
                EndContext();
                BeginContext(15099, 81, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d327131", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15180, 44, true);
                WriteLiteral("\r\n    <!--Masked Input [ OPTIONAL ]-->\r\n    ");
                EndContext();
                BeginContext(15224, 79, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d328430", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15303, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15309, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c9488d0015c3d5bff32f2aec359f02cefa4e5d329688", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15370, 27537, true);
                WriteLiteral(@"
    <script>


        $(function () {
            var CodIng = httpGet(""ci"");
            $(""#DerivarLM"").on(""click"", function () {
                if (DerivarLM.checked) {
                    $(""#sslOfiDerivacion"").prop(""disabled"", false);
                } else {
                    $(""#sslOfiDerivacion"").prop(""disabled"", true);
                }
            });


            $.SecGetJSON(BASE_URL + ""/motor/api/Licencias/listar-suc-derivacion"", function (datos) {
                $(""#sslOfiDerivacion"").html("""");
                $.each(datos, function (i, oficina) {
                    $(""#sslOfiDerivacion"").append($(""<option>"").val(oficina.codOficina).html(oficina.DescOficina).data(""id"", oficina.codOficinaCompin).data(""nombre"", oficina.OficinaCompin));
                });
            });
            $(""#sslOfiDerivacion"").on(""change"", function (e) {

                if ($(this).find(':selected').data('id')>0)
                {
                    $(""#lblmensajecompin"").show();
   ");
                WriteLiteral(@"                 $(""#lblmensajecompin1"").show();
                    $(""#lblCompin"").html($(this).find(':selected').data('nombre'));
                    $(""#lblCompin"").show();
                    $(""#lblCompin1"").html($(this).find(':selected').data('nombre'));
                    $(""#lblCompin1"").show();
               

                }
                else
                {
                    $(""#lblmensajecompin"").hide();
                    $(""#lblmensajecompin1"").hide();
                    $(""#lblCompin"").hide();
                    $(""#lblCompin1"").hide();
                    $(this).val()
                    
                }
            });




            var cargador = {
                cargaLC: function (CodIng) {

                    $.SecGetJSON(BASE_URL + ""/motor/api/Licencias/licencia-data"", { codIngreso: CodIng }, function (response) {

                        $(""#AfiliadoRut"").val(response.IngresoData.RutAfiliado);
                        $(""#AfiliadoRut"").mas");
                WriteLiteral(@"k('99.999.999-*')
                        $(""#AfiliadoRut"").trigger(""blur"");
                        if (response.IngresoData.FormatoLM == 'Mixta') {
                            $(""#radio-formato-mixto-lm"").prop('checked', true)
                            $(""#radio-formato-mixto-lm"").trigger(""change"")

                            if ($(""#FolioLic"").val().length == 9) {
                                $('#FolioLic').mask('9-9999999-*');
                            }
                            else {
                                $('#FolioLic').mask('9-99999999-*');
                            }
                        }
                        $(""#FolioLic"").val(response.IngresoData.FolioLicencia);
                        $.SecGetJSON(BASE_URL + ""/motor/api/Licencias/listar-suc-derivacion"", function (datos) {
                            $(""#sslOfiDerivacion"").html("""");
                            $(""#sslOfiDerivacion"").attr(""disabled"", true);
                            $.each(datos, funct");
                WriteLiteral(@"ion (i, oficina) {
                                var selected = (oficina.codOficina == response.IngresoData.OficinaDerivacion)
                                $(""#sslOfiDerivacion"").append($(""<option>"").val(oficina.codOficina).html(oficina.DescOficina).prop(""selected"", selected));
                            });
                        });
                        //$('#FolioLic').mask('999999?9999*');
                        //$(""#DiasLM"").val(response.IngresoData.CantidadDiasLM);
                        //$(""#FechaDesdeLM"").val(response.IngresoData.FechaDesdeLM);
                        //$(""#FechaHastaLM"").val(response.IngresoData.FechaHastaLM);
                        //$(""#TipoLM"").val(response.IngresoData.TipoLM);
                    });

                },
                saveLC: function (volver) {


                    var WebIngresoLicencia = {
                        //Los Obligatorios
                        CodIngreso: (typeof CodIng != ""undefined"") ? CodIng : 0,
             ");
                WriteLiteral(@"           CodOficina: getCookie(""Oficina""),
                        RutAfiliado: $(""#AfiliadoRut"").val(),
                        NombreAfiliado: $(""#AfiNombres"").val().length > 0 ? $(""#AfiNombres"").val() : ""-"",
                        FolioLc: $(""#FolioLic"").val(),
                        SinDatosEnSistema: $(""#SistemaNoData"").is("":checked""),
                        FormatoLM: $(""#FormLM"").val(),
                        //Los Opcionales
                        CantidadDiasLM: $(""#DiasLM"").val(),
                        FechaInicioLM: $(""#FechaDesdeLM"").val(),
                        FechaHastaLM: $(""#FechaHastaLM"").val(),
                        TipoLM: $(""#TipoLM"").val(),
                        OfiDerivacion: parseInt($(""#sslOfiDerivacion option:selected"").data('id')) > 0 ? $(""#sslOfiDerivacion option:selected"").data('id') : $(""#sslOfiDerivacion"").val(),
                        //Los Documentos
                        DocumentacionLM: []
                        //
                    }

");
                WriteLiteral(@"
                    //$.each($(':checkbox'), function (i, e) {
                    //    WebIngresoLicencia.DocumentacionLM.push({ Periodo: $(e).val(), TipoDoc: $(e).data(""tipodoc""), Recepcionado: $(e).is("":checked"") })
                    //})

                    $.SecPostJSON(BASE_URL + ""/motor/api/Licencias/guardar-licencia"", WebIngresoLicencia, function (respuesta) {
                        if (respuesta.Estado === ""OK"") {
                            $.niftyNoty({
                                type: 'success',
                                container: 'floating',
                                html: '<strong>OK</strong> ' + respuesta.Mensaje,
                                focus: false,
                                timer: 3000,
                                onHidden: function () {
                                    if (typeof volver != ""undefined"" && volver == 1) {
                                        location.href = BASE_URL + ""/motor/App/Licencias""
                        ");
                WriteLiteral(@"            }
                                }
                            });


                        } else {

                            if (respuesta.Objeto == ""[0001]"") {
                                $.niftyNoty({
                                    type: 'danger',
                                    container: 'floating',
                                    html: '<strong>Error</strong> ' + respuesta.Mensaje,
                                    focus: false,
                                    timer: 3000,
                                    onHidden: function () {
                                        if (typeof volver != ""undefined"" && volver == 1) {
                                            location.href = BASE_URL + ""/motor/App/Licencias""
                                        }
                                    }
                                });
                            }

                            if (respuesta.Objeto == ""[0002]"") {
                    ");
                WriteLiteral(@"            bootbox.dialog({
                                    message: respuesta.Mensaje + "" "" + ""¬øDesea Actualizar?"",
                                    title: ""Recepci√≥n de LM"",
                                    buttons: {
                                        success: {
                                            label: ""Si"",
                                            className: ""btn-success"",
                                            callback: function () {
                                                $.SecPostJSON(BASE_URL + ""/motor/api/Licencias/guardar-licencia-derivacion"", WebIngresoLicencia, function (respuesta) {
                                                    if (respuesta.Estado === ""OK"") {
                                                        $.niftyNoty({
                                                            type: 'success',
                                                            message: '<strong>OK</strong> Licencia Actualizada. ',
                   ");
                WriteLiteral(@"                                         container: 'floating',
                                                            timer: 5000
                                                        });
                                                    }

                                                });

                                            }
                                        },

                                        danger: {
                                            label: ""No"",
                                            className: ""btn-danger"",
                                            callback: function () {
                                                $.niftyNoty({
                                                    type: 'danger',
                                                    message: '<strong>Liciencia no derivada</strong>',
                                                    container: 'floating',
                                                    timer: 5");
                WriteLiteral(@"000
                                                });
                                            }
                                        }

                                    }
                                });

                            }
                         
                            //$.niftyNoty({
                            //    type: 'danger',
                            //    container: 'floating',
                            //    html: '<strong>Error</strong> ' + respuesta.Mensaje,
                            //    focus: false,
                            //    timer: 3000
                            //});
                        }
                    });


                }
            }


            // Initialize Masked Inputs
            // a - Represents an alpha character (A-Z,a-z)
            // 9 - Represents a numeric character (0-9)
            // * - Represents an alphanumeric character (A-Z,a-z,0-9)
            $.mask.definitions['~'] = '[13");
                WriteLiteral(@"47]';
            $.mask.definitions['^'] = '[34]';
            $.mask.definitions['¬¨'] = '[0123456789Kk]';



            $('.demo-msk-date').mask('99/99/9999');
            $('.es-rut').mask('99.999.999-*');
            //$('#FolioLic').mask('999999?9999*');
            $('#FolioLic').mask('99999999');
            $(""#TipoLM"").mask('~');
            
            $('#frm-data-lc').bootstrapValidator({
                excluded: [':disabled', ':not(:visible)'],
                feedbackIcons: [],
                fields: {
                    AfiliadoRut: {
                        validators: {
                            notEmpty: {
                                message: 'Debe ingresar un rut'
                            },
                            callback: {
                                message: 'Rut Invalido',
                                callback: function (value, validator, $field) {
                                    console.log(value)
                                 ");
                WriteLiteral(@"   return $.rut.validar(value);
                                }
                            }
                        }
                    },
                    FolioLic: {
                        validators: {
                            notEmpty: {
                                message: 'Debe ingresar un folio'
                            },
                            callback: {
                                message: 'Folio Invalido',
                                callback: function (value, validator, $field) {
                                    if ($('#FormLM').val() == 'Mixta') {
                                        value = value.replace(/-/g, '');
                                        var xx = value.substring(0, 1);
                                        //console.log(value.substring(0, 1))
                                        if (xx == '3' || xx == '4') {

                                            //console.log(value.substring(value.length - 1))
              ");
                WriteLiteral(@"                              var xy = Number(value.substring(1, value.length - 1)).toMoney(0) + '-' + value.substring(value.length - 1);

                                            //console.log($.rut.validar(xy))
                                            var result = $.rut.validar(xy)
                                            /*if(result)
                                            {
                                                if(value.length == 9)
                                                {
                                                    $('#FolioLic').mask('9-9999999-*');
                                                }
                                                else
                                                {
                                                    $('#FolioLic').mask('9-99999999-*');
                                                }
                                            }*/

                                            return result;


 ");
                WriteLiteral(@"                                       }
                                        else {
                                            return false;
                                        }
                                    }
                                    else {
                                        return true;
                                    }
                                }
                            },
                            /*callback: {
                                message: 'Folio Invalido',
                                callback: function (value, validator, $field) {
                                    return $.rut.validar(value);
                                }
                            }*/
                            /*numeric: {
                                message: 'Solo se pueden ingresar digitos',
                                // The default separators
                                thousandsSeparator: '',
                                deci");
                WriteLiteral(@"malSeparator: ''
                            }*/
                        }
                    }/*,
                    DiasLM: {
                        validators: {
                            numeric: {
                                message: 'Solo se pueden ingresar digitos',
                                // The default separators
                                thousandsSeparator: '',
                                decimalSeparator: ''
                            }
                        }
                    },
                    FechaDesdeLM: {
                        validators: {
                            date: {
                                format: 'DD/MM/YYYY',
                                message: 'Dede ingresar una fecha valida'
                            }
                        }
                    },
                    TipoLM: {
                        validators: {
                            numeric: {
                                message: 'Solo");
                WriteLiteral(@" se pueden ingresar digitos',
                                // The default separators
                                thousandsSeparator: '',
                                decimalSeparator: ''
                            }
                        },

                    },*/

                }
            }).on('success.form.bv', function (e) {
                // Prev√©n que se mande el formulario
                e.preventDefault();
                var $form = $(e.target);

                if ($('#FormLM').val() == 'Mixta') {
                    if ($(""#FolioLic"").val().length == 9) {
                        $('#FolioLic').mask('9-9999999-*');
                    }
                    else {
                        $('#FolioLic').mask('9-99999999-*');
                    }
                }

                cargador.saveLC(0);

                if (typeof CodIng == ""undefined"") {
                    $(""#AfiliadoRut"").val("""");
                    $(""#AfiliadoRut"").focus();
      ");
                WriteLiteral(@"              $(""#FolioLic"").val("""");
                    $(""#AfiNombres"").val("""");
                    $(""#EmpresaRut"").val("""");
                    $(""#EmpresaNombre"").val("""");
                    $(""#lblmensajecompin"").hide();
                    $(""#lblmensajecompin1"").hide();
                    $(""#lblCompin"").hide();
                    $(""#DerivarLM"").prop(""checked"", false);
                    $(""#sslOfiDerivacion"").val('');
                    $(""#sslOfiDerivacion"").prop('disabled', true);
                    $(""#frm-data-lc"").bootstrapValidator('resetForm', true);
                }
            });


            $(""#bt-bolver"").on(""click"", function () {
                location.href = BASE_URL + ""/motor/App/Licencias""
            });


            $(""#AfiliadoRut"").on(""keyup"", function () {
                $('#frm-data-lc').bootstrapValidator('updateStatus', 'AfiliadoRut', 'NOT_VALIDATED').bootstrapValidator('validateField', 'AfiliadoRut');
            })

            //$(""#F");
                WriteLiteral(@"olioLic"").on(""keyup"", function () {
            //    $('#frm-data-lc').bootstrapValidator('updateStatus', 'FolioLic', 'NOT_VALIDATED').bootstrapValidator('validateField', 'FolioLic');
            //})

            $(""#AfiliadoRut"").on(""blur"", function () {

                if ($(this).val().length > 7) {
                    $.SecGetJSON(BASE_URL + ""/motor/api/Licencias/datos-afiliado"", { AfiliadoRut: $(this).val() }, function (respuesta) {
                        if (respuesta.Estado === ""OK"") {

                            if (respuesta.Objeto.logField.codRespuestaField != 5) {
                                $(""#AfiNombres"").val(respuesta.Objeto.datosAfiliado1Field.apellidoPaternoField + "" "" + respuesta.Objeto.datosAfiliado1Field.apellidoMaternoField + "" "" + respuesta.Objeto.datosAfiliado1Field.nombresField)
                                $(""#EmpresaRut"").val(respuesta.Objeto.empresasField[0].rutEmpresaField);
                                $(""#EmpresaNombre"").val(respuesta.Objeto.empresasFi");
                WriteLiteral(@"eld[0].razonSocialField);
                                $(""#SistemaNoData"").prop(""checked"", false);
                                $(""#SistemaNoData"").prop(""disabled"", true);
                            } else {
                                $(""#AfiNombres"").val("""")
                                $(""#EmpresaRut"").val("""");
                                $(""#EmpresaNombre"").val("""");
                                $(""#SistemaNoData"").prop(""checked"", true);
                            }


                        } else {
                            $.niftyNoty({
                                type: 'danger',
                                container: 'floating',
                                html: '<strong>Error</strong> ' + respuesta.Mensaje,
                                focus: false,
                                timer: 3000
                            });
                        }
                    });
                }



            });


            $(""#radio-fo");
                WriteLiteral(@"rmato-manual-lm"").on(""change"", function (e) {
                $('#FolioLic').val('');
                $('#FolioLic').mask('99999999');
                $('#FormLM').val('Manual');
            })

            $(""#radio-formato-mixto-lm"").on(""change"", function (e) {
                $('#FolioLic').val('');
                $('#FolioLic').unmask();
                $('#FormLM').val('Mixta');
            })

            $('#FolioLic').on(""keyup"", function (e) {

                if ($('#FormLM').val() == 'Mixta') {
                    if ($(this).val().replace(/-/g, '').replace(/_/g, '').length == 0) {
                        $('#FolioLic').unmask();
                        $('#FolioLic').val('');
                    }
                    else {
                        $(this).val($(this).val().replace(/-/g, '').replace(/_/g, ''))
                        $('#FolioLic').unmask();
                    }
                }

                $('#frm-data-lc').bootstrapValidator('updateStatus', 'Folio");
                WriteLiteral(@"Lic', 'NOT_VALIDATED').bootstrapValidator('validateField', 'FolioLic');
            });

            /*$('#FolioLic').on(""keydown"", function (e) {
                console.log(""keydown"",e)
                if ($('#FormLM').val() == 'Mixta') {

                        var value = $(this).val().replace(/-/g, '');
                        var xx = value.substring(0, 1);
                        //console.log(value.substring(0, 1))
                        if (xx == '3' || xx == '4') {

                            //console.log(value.substring(value.length - 1))
                            var xy = Number(value.substring(1, value.length - 1)).toMoney(0) + '-' + value.substring(value.length - 1);

                            //console.log($.rut.validar(xy))
                            var result = $.rut.validar(xy)
                            if (result) {
                                if (value.length == 9) {
                                    $('#FolioLic').mask('9-9999999-*');
                ");
                WriteLiteral(@"                }
                                else {
                                    $('#FolioLic').mask('9-99999999-*');
                                }
                            }

                            return result;


                        }

                        //if ($(this).val().replace(/-/g, '').replace(/_/g, '').length > 8) {
                        //    $('#frm-data-lc').bootstrapValidator('updateStatus', 'FolioLic', 'NOT_VALIDATED').bootstrapValidator('validateField', 'FolioLic');
                        //}

                }
            });*/



            $('#FolioLic').on(""focus"", function (e) {

                if ($('#FormLM').val() == 'Mixta') {
                    $('#FolioLic').val($('#FolioLic').val().replace(/-/g, '').replace(/_/g, ''))
                    $('#FolioLic').unmask();
                }
            });


            $('#FolioLic').on(""click"", function (e) {

                if ($('#FormLM').val() == 'Mixta') {
        ");
                WriteLiteral(@"            $('#FolioLic').val($('#FolioLic').val().replace(/-/g, '').replace(/_/g, ''))
                    $('#FolioLic').unmask();
                }
            });


            $('#FolioLic').on(""blur"", function (e) {
                if ($('#FormLM').val() == 'Mixta') {
                    if ($(this).val().length == 9) {
                        $('#FolioLic').mask('9-9999999-*');
                    }
                    else {
                        $('#FolioLic').mask('9-99999999-*');
                    }
                }
            });





            var VaLM = {

                AplicarValidaciones: function (e) {

                    VaLM.reiniciar();


                    if ($(""#TipoLM"").val() == """" || $(""#DiasLM"").val() == """" || $(""#FechaDesdeLM"").val() == """") {
                        return false;
                    }

                    if ($(""#DiasLM"").val() != """" && $(""#FechaDesdeLM"").val() != """") {
                        $(""#FechaHastaLM"").val(Calc");
                WriteLiteral(@"ularDiasCorridos($(""#FechaDesdeLM"").val().replace(/\//g, '-'), $(""#DiasLM"").val()).replace(/-/g, '/'));
                    }

                    //Mostrar tres ultimas liquidaciones
                    if ($(""#TipoLM"").val() == ""1"" || $(""#TipoLM"").val() == ""3"" || $(""#TipoLM"").val() == ""4"" || $(""#TipoLM"").val() == ""7"") {
                        $(""#doc_check"").show();
                        VaLM.mesesUltimasLiq($(""#FechaDesdeLM"").val())
                    }

                    if ($(""#TipoLM"").val() == ""3"") {
                        $(""#doc_check_nac"").show();
                        VaLM.mesesLiqParental($(""#FechaDesdeLM"").val())
                        if ($(""#DiasLM"").val() >= 50) {
                            $(""#nac"").show();
                        }
                    }

                    if ($(e.target).attr(""id"") == ""FechaDesdeLM"") {
                        $('#frm-data-lc').bootstrapValidator('updateStatus', 'FechaDesdeLM', 'NOT_VALIDATED').bootstrapValidator('validateField'");
                WriteLiteral(@", 'FechaDesdeLM');
                    }

                    if ($(e.target).attr(""id"") == ""TipoLM"") {
                        $('#frm-data-lc').bootstrapValidator('updateStatus', 'TipoLM', 'NOT_VALIDATED').bootstrapValidator('validateField', 'TipoLM');
                    }

                },
                reiniciar: function () {
                    $(""#doc_check"").hide();
                    $(""#doc_check_nac"").hide();
                    $(""#nac"").hide();
                },
                mesesUltimasLiq: function (fechaLM) {
                    var leyendaMeses = [""Enero"", ""Febrero"", ""Marzo"", ""Abril"", ""Mayo"", ""Junio"", ""Julio"", ""Agosto"", ""Septiembre"", ""Octubre"", ""Noviembre"", ""Diciembre""];
                    var dt = parseDate(fechaLM.replace(/\//g, '-'));
                    dt.setMonth(dt.getMonth() - 1)
                    $(""#lm1"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $(""#m1"").val(fechaToPeriodo(dt))
                    $(""#m");
                WriteLiteral(@"1"").data(""tipodoc"", 1)
                    dt.setMonth(dt.getMonth() - 1)
                    $(""#lm2"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $(""#m2"").val(fechaToPeriodo(dt))
                    $(""#m2"").data(""tipodoc"", 1)
                    dt.setMonth(dt.getMonth() - 1)
                    $(""#lm3"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $(""#m3"").val(fechaToPeriodo(dt))
                    $(""#m3"").data(""tipodoc"", 1)
                },
                mesesLiqParental: function (fechaLM) {
                    var leyendaMeses = [""Enero"", ""Febrero"", ""Marzo"", ""Abril"", ""Mayo"", ""Junio"", ""Julio"", ""Agosto"", ""Septiembre"", ""Octubre"", ""Noviembre"", ""Diciembre""];
                    var dt = parseDate(fechaLM.replace(/\//g, '-'));
                    dt.setMonth(dt.getMonth() - 8)
                    $(""#lmn1"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $");
                WriteLiteral(@"(""#mn1"").val(fechaToPeriodo(dt))
                    $(""#mn1"").data(""tipodoc"", 2)
                    dt.setMonth(dt.getMonth() - 1)
                    $(""#lmn2"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $(""#mn2"").val(fechaToPeriodo(dt))
                    $(""#mn2"").data(""tipodoc"", 2)
                    dt.setMonth(dt.getMonth() - 1)
                    $(""#lmn3"").text(leyendaMeses[dt.getMonth()] + "" "" + dt.getFullYear().toString())
                    $(""#mn3"").val(fechaToPeriodo(dt))
                    $(""#mn3"").data(""tipodoc"", 2)
                },

            }

            $("".validatore"").on(""keyup"", VaLM.AplicarValidaciones);



            if (typeof CodIng != ""undefined"") {
                cargador.cargaLC(CodIng);
            }

            $(""#sslOfiDerivacion"").trigger(""change"");
        })


    </script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
