#pragma checksum "C:\Users\17042783-1.LAARAUCANA\Source\Mdn-Dev\MDN-Microservices\legacy\src\Api\CRM\Areas\AppPage\Views\Gestion\Licencia.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "53e79f5c3082f4f36c823f185f52b7f998bbc7a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_AppPage_Views_Gestion_Licencia), @"mvc.1.0.view", @"/Areas/AppPage/Views/Gestion/Licencia.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/AppPage/Views/Gestion/Licencia.cshtml", typeof(AspNetCore.Areas_AppPage_Views_Gestion_Licencia))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53e79f5c3082f4f36c823f185f52b7f998bbc7a9", @"/Areas/AppPage/Views/Gestion/Licencia.cshtml")]
    public class Areas_AppPage_Views_Gestion_Licencia : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-validator/bootstrapValidator.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/chosen/chosen.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-select/bootstrap-select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-validator/bootstrapValidator.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/bootbox/bootbox.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Assets/plugins/chosen/chosen.jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\17042783-1.LAARAUCANA\Source\Mdn-Dev\MDN-Microservices\legacy\src\Api\CRM\Areas\AppPage\Views\Gestion\Licencia.cshtml"
  
    ViewBag.Title = "Licencia";
    Layout = "~/Views/Shared/_MdnLayout.cshtml";

#line default
#line hidden
            BeginContext(92, 94, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "53e79f5c3082f4f36c823f185f52b7f998bbc7a96246", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(186, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(188, 69, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "53e79f5c3082f4f36c823f185f52b7f998bbc7a97499", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(257, 40, true);
            WriteLiteral("\r\n<!--Bootstrap Select [ OPTIONAL ]-->\r\n");
            EndContext();
            BeginContext(297, 81, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "53e79f5c3082f4f36c823f185f52b7f998bbc7a98793", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(378, 787, true);
            WriteLiteral(@"

<!--Page content-->
<!--===================================================-->
<div id=""page-content"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""tab-base"">
                <ul class=""nav nav-tabs"">
                    <li class=""active"">
                        <a data-toggle=""tab"" href=""#demo-lft-tab-1"" aria-expanded=""true"" id=""tab_Recepcion"" class=""tab-principal"">Recepción<span class=""badge badge-purple"" style=""display:none;"">15</span></a>
                    </li>
                    <li class="""">
                        <a data-toggle=""tab"" href=""#demo-lft-tab-2"" aria-expanded=""false"" id=""tab_Compin"" class=""tab-principal"">COMPIN<span class=""badge badge-purple"" style=""display:none;"">5</span></a>
                    </li>
");
            EndContext();
            BeginContext(1406, 8951, true);
            WriteLiteral(@"                </ul>
                <div class=""tab-content"">
                    <div id=""demo-lft-tab-1"" class=""tab-pane fade active in"">
                        <div class=""panel-body"">
                            <form id=""fdatos"">
                                <div class=""row"">
                                    <div class=""col-sm-3"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Seleccione Empresa: </label>
                                            <select class=""lista-empresas"" name=""slEmpresaOrigen"" id=""slEmpresaOrigen"" data-placeholder=""Seleccione Empresa""></select>
                                        </div>
                                    </div>
                                    <div class=""col-sm-3"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">Fecha </label>
                          ");
            WriteLiteral(@"                  <div id=""demo-dp-component"">
                                                <div class=""input-group date"">
                                                    <input type=""text"" class=""form-control"" id=""idfecha_inicio"" name=""idfecha_inicio"" readonly>
                                                    <span class=""input-group-addon""><i class=""demo-pli-calendar-4""></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class=""row"">
                                    <div class=""tree"">
                                        <ul>
                                            <li>
                                                <div class=""row"">
                                                    <div class=""col-sm-12"">
  ");
            WriteLiteral(@"                                                      <div class=""form-group"">
                                                            <label class=""control-label"">N° Total LM Recibidas</label>
                                                            <input class=""form-control"" id=""LM_Recibidas"" type=""text"" name=""LM_Recibidas"">
                                                        </div>
                                                    </div>
                                                </div>
                                                <ul>
                                                    <li>
                                                        <div class=""row"">
                                                            <div class=""col-sm-12"">
                                                                <div class=""form-group"">
                                                                    <label class=""control-label"">N° LM Recepcionadas</label>
                ");
            WriteLiteral(@"                                                    <input class=""form-control"" type=""text"" id=""LM_Recepcion"" name=""LM_Recepcion"">
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <ul>
                                                            <li>
                                                                <div class=""row"">
                                                                    <div class=""col-sm-12"">
                                                                        <div class=""form-group"">
                                                                            <label class=""control-label"">N° LM Ingresadas</label>
                                                                            <input class=""form-control"" type=""text"" id=""LM_Digitadas"" name=""LM_Digitadas"">");
            WriteLiteral(@"
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                            <li>
                                                                <div class=""row"">
                                                                    <div class=""col-sm-12"">
                                                                        <div class=""form-group"">
                                                                            <label class=""control-label"">N° LM No Ingresadas</label>
                                                                            <input class=""form-control"" type=""text"" id=""LM_No_Digitadas"" name=""LM_No_Digitadas"">
                                                                        </div>
            ");
            WriteLiteral(@"                                                        </div>
                                                                </div>
                                                            </li>
                                                        </ul>
                                                    </li>
                                                    <li>
                                                        <div class=""row"">
                                                            <div class=""col-sm-12"">
                                                                <div class=""form-group"">
                                                                    <label class=""control-label"">N° LM Devueltas</label>
                                                                    <input class=""form-control"" type=""text"" id=""LM_No_Recepcion"" name=""LM_No_Recepcion"">
                                                                </div>
                                           ");
            WriteLiteral(@"                 </div>
                                                        </div>
                                                    </li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </div>
                                </div>


                                <div class=""panel-footer text-right"">
                                    <button class=""btn btn-success"" type=""submit"" id=""btGuardar"">Guardar</button>
                                </div>

                            </form>
                        </div>
                    </div>
                    <div id=""demo-lft-tab-2"" class=""tab-pane fade"">
                        <div class=""panel-body"">
                            <form id=""fdatosCompin"">
                                <div class=""row"">
                                    <div class=""col-sm-2"">
                          ");
            WriteLiteral(@"              <div class=""form-group"">
                                            <label class=""control-label"">Fecha </label>
                                            <div id=""demo-dp-component-compin"">
                                                <div class=""input-group date"">
                                                    <input type=""text"" class=""form-control"" id=""idfechaenvioCompin"" name=""idfechaenvioCompin"" readonly>
                                                    <span class=""input-group-addon""><i class=""demo-pli-calendar-4""></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""col-sm-2"">
                                        <div class=""form-group"">
                                            <label class=""control-label"">N° Licencia Enviadas</label>
                        ");
            WriteLiteral(@"                    <input class=""form-control"" type=""text"" id=""LM_Enviadas"" name=""LM_Enviadas"">
                                        </div>
                                    </div>

                                    <div class=""col-sm-2"">
                                            
                                            <button class=""btn btn-success"" style=""margin-top: 23px !important;"" type=""submit"" id=""btGuardarCompin"">Guardar</button>
                                        
                                    </div>
                                    
                                </div>
                                
                            </form>
                        </div>
                    </div>
");
            EndContext();
            BeginContext(13493, 2180, true);
            WriteLiteral(@"                </div>
            </div>
        </div>





<style>


.tree ul {
	padding-top: 20px; position: relative;
	
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

.tree li {
	float: left; text-align: center;
	list-style-type: none;
	position: relative;
	padding: 20px 20px 5px 13px;
	
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after{
	content: '';
	position: absolute; top: 0; right: 50%;
	border-top: 1px solid #ccc;
	width: 50%; 
    height: 20px;
}
.tree li::after{
	right: auto; left: 50%;
	border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
	display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child{ padding-top: 0;}

/*Remove left connec");
            WriteLiteral(@"tor from first child and 
right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
	border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
	border-right: 1px solid #ccc;
	border-radius: 0 5px 0 0;
	-webkit-border-radius: 0 5px 0 0;
	-moz-border-radius: 0 5px 0 0;
}
.tree li:first-child::after{
	border-radius: 5px 0 0 0;
	-webkit-border-radius: 5px 0 0 0;
	-moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
	content: '';
	position: absolute; 
    top: 0; 
    left: 50%;
	border-left: 1px solid #ccc;
	width: 0; 
    height: 20px;
}



.tree li div.row{
	border: 1px solid #ccc;
	padding: 5px 10px;
	text-decoration: none;
	
	font-size: 11px;
	display: inline-block;
	
	border-radius: 5px;
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;
	
	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}


   ");
            WriteLiteral("     </style>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n<!--===================================================-->\r\n<!--End page content-->\r\n\r\n\r\n");
            EndContext();
            DefineSection("script", async() => {
                BeginContext(15689, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(15697, 86, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "53e79f5c3082f4f36c823f185f52b7f998bbc7a922860", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15783, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15789, 88, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "53e79f5c3082f4f36c823f185f52b7f998bbc7a924118", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15877, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15883, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "53e79f5c3082f4f36c823f185f52b7f998bbc7a925376", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15946, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15952, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "53e79f5c3082f4f36c823f185f52b7f998bbc7a926634", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(16020, 16990, true);
                WriteLiteral(@"


    <script>

        var cargador = {
            CargarRecepcionLicencia: function (parametros) {
                
                $.SecGetJSON(BASE_URL + ""/motor/api/Gestion/obtener-recepcion-licencia"", parametros, function (respuesta) {

                    if (respuesta.Estado === ""OK"") {

                        $(""#LM_Recibidas"").val(respuesta.Objeto.LMRecibida)
                        $(""#LM_Digitadas"").val(respuesta.Objeto.LMDigitada)
                        $(""#LM_No_Digitadas"").val(respuesta.Objeto.LMNoDigitada)
                        $(""#LM_No_Recepcion"").val(respuesta.Objeto.LMNoRecepcionada)
                        $(""#LM_Recepcion"").val(respuesta.Objeto.LMRecepcionada)
                    }
                    
                });
            },
            CargarRecepcionLicenciaCompin: function (parametros) {

                $.SecGetJSON(BASE_URL + ""/motor/api/Gestion/obtener-recepcion-licencia-compin"", parametros, function (respuesta) {
                    if (re");
                WriteLiteral(@"spuesta.Estado === ""OK"") {
                        $(""#LM_Enviadas"").val(respuesta.Objeto.LMEnviado)
                    }
                });
            },
        }

        $(document).ready(function () {


            //Solo Agente ve Compin
            if (getCookie(""Cargo"") !== ""Agente"") {
                $(""#tab_Compin"").hide();
            }
            var d = new Date();
            var fechaHoy = d.getDate().toString().paddingLeft(""00"") + '-' + (d.getMonth() + 1).toString().paddingLeft(""00"") + '-' + d.getFullYear().toString()
            $(""#idfecha_inicio"").val(fechaHoy)
            $(""#idfechaenvioCompin"").val(fechaHoy)
            //$(""#idfechaenvioCompin2"").val(fechaHoy)

            

            $('.lista-empresas').chosen({ width: '100%', no_results_text: ""No se han encontrado resultados"" }).on(""change"", function (e) {
                
                if(($(""#idfecha_inicio"").val().length > 0) && ($(e.currentTarget).find("":selected"").val().length > 0 ))
            ");
                WriteLiteral(@"    {
                    var parametros = {
                        Fecha: $(""#idfecha_inicio"").val(),
                        RutEmpresa: $(e.currentTarget).find("":selected"").val()
                    };
                    cargador.CargarRecepcionLicencia(parametros);
                }
            });

            /*$('#demo-dp-component .input-group.date').datepicker(
                    { autoclose: true, format: 'dd-mm-yyyy', language: ""es"", daysOfWeekDisabled: [6, 0], todayHighlight: true }
             ).on('changeDate', function (e) {
                 $('#fdatos').bootstrapValidator('updateStatus', 'idfecha_inicio', 'NOT_VALIDATED').bootstrapValidator('validateField', 'idfecha_inicio');

                 if (($(""#idfecha_inicio"").val().length > 0) && ($(""#slEmpresaOrigen"").find("":selected"").val().length > 0)) {
                     var parametros = {
                         Fecha: $(""#idfecha_inicio"").val(),
                         RutEmpresa: $(""#slEmpresaOrigen"").find("":selected""");
                WriteLiteral(@").val()
                     };
                     cargador.CargarRecepcionLicencia(parametros);
                 }

             });*/

            /*$('#demo-dp-component-compin .input-group.date').datepicker(
                 { autoclose: true, format: 'dd-mm-yyyy', language: ""es"", daysOfWeekDisabled: [6, 0], todayHighlight: true }
             ).on('changeDate', function (e) {
                 $('#fdatosCompin').bootstrapValidator('updateStatus', 'idfechaenvioCompin', 'NOT_VALIDATED').bootstrapValidator('validateField', 'idfechaenvioCompin');

                 var parametros = {
                     Fecha: $(""#idfechaenvioCompin"").val(),
                 };
                 cargador.CargarRecepcionLicenciaCompin(parametros);

             });*/

            $(""#LM_Recepcion"").on(""keyup"", function () {

                try {
                    var resta = parseInt($(""#LM_Recibidas"").val()) - parseInt($(this).val())
                    var final = resta < 0 || isNaN(resta) ? 0 : re");
                WriteLiteral(@"sta;
                    $(""#LM_No_Recepcion"").val(final)
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_No_Recepcion', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_No_Recepcion');
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_Recibidas', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Recibidas');
                    
                } catch (ex) {
                    console.log(ex);
                }
            });

            $(""#LM_No_Recepcion"").on(""keyup"", function () {

                try {
                    var resta = parseInt($(""#LM_Recibidas"").val()) - parseInt($(this).val())
                    var final = resta < 0 || isNaN(resta) ? 0 : resta;
                    $(""#LM_Recepcion"").val(final);
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_Recepcion', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Recepcion');
                    $('#fdatos').bootstrapValidator('update");
                WriteLiteral(@"Status', 'LM_Recibidas', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Recibidas');
                } catch (ex) {
                    console.log(ex);
                }
            });

            $(""#LM_Digitadas"").on(""keyup"", function () {

                try {
                    var resta = parseInt($(""#LM_Recepcion"").val()) - parseInt($(this).val())
                    var final = resta < 0 || isNaN(resta) ? 0 : resta;
                    $(""#LM_No_Digitadas"").val(final)
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_No_Digitadas', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_No_Digitadas');
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_Recepcion', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Recepcion');
                } catch (ex) {
                    console.log(ex);
                }
            });
            
            $(""#LM_No_Digitadas"").on(""keyup"", function () {

                tr");
                WriteLiteral(@"y {
                    var resta = parseInt($(""#LM_Recepcion"").val()) - parseInt($(this).val())
                    var final = resta < 0 || isNaN(resta) ? 0 : resta;
                    $(""#LM_Digitadas"").val(final)
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_Digitadas', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Digitadas');
                    $('#fdatos').bootstrapValidator('updateStatus', 'LM_Recepcion', 'NOT_VALIDATED').bootstrapValidator('validateField', 'LM_Recepcion');
                } catch (ex) {
                    console.log(ex);
                }
            });

            $.SecGetJSON(BASE_URL + ""/motor/api/Gestion/listar-empresa-licencia"", function (respuesta) {

                $("".lista-empresas"").html("""");
                $("".lista-empresas"").append($(""<option>"").val(""""));
                $.each(respuesta, function (i, e) {
                    //Llenar los origenes solo que tengan cantidad > 0

                    $(""#slEmpres");
                WriteLiteral(@"aOrigen"").append($(""<option>"").val(e.EmpresaRut).html(e.EmpresaRutDv + "" "" + e.EmpresaNombre));

                });

                $("".lista-empresas"").trigger(""chosen:updated"");

            });



            $('#fdatos').bootstrapValidator({
                excluded: [':disabled'],
                fields: {
                    slEmpresaOrigen: {
                        validators: {
                            notEmpty: {
                                message: 'Debe seleccionar una empresa'
                            }
                        }
                    },
                    idfecha_inicio: {
                        validators: {
                            notEmpty: {
                                message: 'Debe seleccionar una fecha de inicio'
                            }
                        }
                    },
                    LM_Recibidas: {
                        validators: {
                            notEmpty: {
                      ");
                WriteLiteral(@"          message: 'Nro. de LM Recibidas no debe ser vacío.'
                            },
                            digits: {
                                message: 'El valor debe ser un digito'
                            },
                            callback: {
                                message: 'La suma de los hijos debe ser igual al padre',
                                callback: function (value, validator, $field) {
                                    var total = parseInt($(""#LM_Recepcion"").val()) + parseInt($(""#LM_No_Recepcion"").val())
                                    return parseInt(value) === total;
                                }
                            }
                        }
                    },
                    LM_Digitadas: {
                        validators: {
                            notEmpty: {
                                message: 'Nro. de LM Digitadas no debe ser vacío.'
                            },
                            di");
                WriteLiteral(@"gits: {
                                message: 'El valor debe ser un digito'
                            },
                            lessThan: {
                                value: function () { return $(""#LM_Recepcion"").val(); },
                                message: 'El valor no puede ser mayor al total recivido'
                            }
                        }
                    },
                    LM_No_Digitadas: {
                        validators: {
                            notEmpty: {
                                message: 'Nro. de LM No Digitadas no debe ser vacío.'
                            },
                            digits: {
                                message: 'El valor debe ser un digito'
                            },
                            lessThan: {
                                value: function () { return $(""#LM_Recepcion"").val(); },
                                message: 'El valor no puede ser mayor al total recivido'
     ");
                WriteLiteral(@"                       }
                        }
                    },
                    LM_No_Recepcion: {
                        validators: {
                            notEmpty: {
                                message: 'Nro. de LM No Recepcionadas no debe ser vacío.'
                            },
                            digits: {
                                message: 'El valor debe ser un digito'
                            },
                            lessThan: {
                                value: function () { return $(""#LM_Recibidas"").val(); },
                                message: 'El valor no puede ser mayor al total recivido'
                            }
                        }
                    },
                    LM_Recepcion: {
                        validators: {
                            notEmpty: {
                                message: 'Nro. de LM Recepcionadas no debe ser vacío.'
                            },
                     ");
                WriteLiteral(@"       digits: {
                                message: 'El valor debe ser un digito'
                            },
                            lessThan: {
                                value: function () { return $(""#LM_Recibidas"").val(); },
                                message: 'El valor no puede ser mayor al total recivido'
                            },
                            callback: {
                                message: 'La suma de los hijos debe ser igual al padre',
                                callback: function (value, validator, $field) {
                                    var total = parseInt($(""#LM_Digitadas"").val()) + parseInt($(""#LM_No_Digitadas"").val())
                                    return parseInt(value) === total;
                                }
                            }
                        }
                    },
                }
            }).on('success.form.bv', function (e) {
                e.preventDefault();
                ");
                WriteLiteral(@"var $form = $(e.target);

                var webDato = {
                    wRutEmpresa: $(""#slEmpresaOrigen"").val(),
                    wFechaRecepcion: $(""#idfecha_inicio"").val(),
                    wLMRecibida: $(""#LM_Recibidas"").val(),
                    wLMDigitada: $(""#LM_Digitadas"").val(),
                    wLMNoDigitada: $(""#LM_No_Digitadas"").val(),
                    wLMNoRecepcion: $(""#LM_No_Recepcion"").val(),
                    wCodOficina: getCookie(""Oficina""),
                    wLMRecepcionada: $(""#LM_Recepcion"").val()
                };

                $.SecPostJSON(BASE_URL + ""/motor/api/Gestion/guardar-recepcion-licencia"", webDato, function (respuesta) {

                    if (respuesta.Estado === ""OK"") {
                        $.niftyNoty({
                            type: 'success',
                            container: 'floating',
                            html: '<strong>OK</strong> ' + respuesta.Mensaje,
                            focus: false,
    ");
                WriteLiteral(@"                        timer: 3000
                        });

                        /*$(""fdatos"").trigger(""reset"");
                        $(""#fdatos"")[0].reset();
                        $("".lista-empresas"").trigger(""chosen:updated"");*/

                        
                        

                    } else {
                        $.niftyNoty({
                            type: 'danger',
                            container: 'floating',
                            html: '<strong>Error</strong> ' + respuesta.Mensaje,
                            focus: false,
                            timer: 3000
                        });
                    }

                    $form.bootstrapValidator('resetForm', true);
                    var d = new Date();
                    var fechaHoy = d.getDate().toString().paddingLeft(""00"") + '-' + (d.getMonth() + 1).toString().paddingLeft(""00"") + '-' + d.getFullYear().toString()
                    $(""#idfecha_inicio"").val(fechaHoy)
 ");
                WriteLiteral(@"                   

                });

            });


            $('#fdatosCompin').bootstrapValidator({
                excluded: [':disabled', ':not(:visible)'],
                fields: {
                    idfechaenvioCompin: {
                        validators: {
                            notEmpty: {
                                message: 'Debe seleccionar Fecha de envío a compin'
                            }
                        }
                    },
                    LM_Enviadas: {
                        validators: {
                            notEmpty: {
                                message: 'El valor no puede ser vacío'
                            },
                            digits: {
                                message: 'El valor debe ser un digito'
                            }
                        }
                    },
                    
                }
            }).on('success.form.bv', function (e) {
                e.pr");
                WriteLiteral(@"eventDefault();

                var webDatoCompin = {
                    wFechaEnvio: $(""#idfechaenvioCompin"").val(),
                    wLMEnviada: $(""#LM_Enviadas"").val(),
                    wCodOficina: getCookie(""Oficina"")
                };

                $.SecPostJSON(BASE_URL + ""/motor/api/Gestion/guardar-recepcion-licencia-envio-compin"", webDatoCompin, function (respuesta) {
                    if (respuesta.Estado === ""OK"") {
                        $.niftyNoty({
                            type: 'success',
                            container: 'floating',
                            html: '<strong>OK</strong> ' + respuesta.Mensaje,
                            focus: false,
                            timer: 3000
                        });
                        $(""fdatosCompin"").trigger(""reset"");
                        $(""#fdatosCompin"")[0].reset();
                    } else {
                        $.niftyNoty({
                            type: 'danger',
         ");
                WriteLiteral(@"                   container: 'floating',
                            html: '<strong>Error</strong> ' + respuesta.Mensaje,
                            focus: false,
                            timer: 3000
                        });
                    }

                    var d = new Date();
                    var fechaHoy = d.getDate().toString().paddingLeft(""00"") + '-' + (d.getMonth() + 1).toString().paddingLeft(""00"") + '-' + d.getFullYear().toString()
                    $(""#idfechaenvioCompin"").val(fechaHoy)
                });

            });


        });

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
